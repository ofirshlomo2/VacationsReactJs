{"ast":null,"code":"var _jsxFileName = \"/Users/ofirshlomo/Desktop/\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD/vacationProject/client/src/pages/RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nconst field = ['firstName', 'lastName', 'userName', 'password'];\nimport { Form, Input, Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterPage() {\n  _s();\n\n  const [form, setForm] = useState({});\n  const [serverError, setServerError] = useState('');\n  const history = useHistory();\n\n  const onSubmit = async event => {\n    try {\n      event.preventDefault(); // todo: validate\n\n      const res = await fetch('/api/regiser', {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(form)\n      });\n      const body = await res.json();\n\n      if (!res.ok) {\n        return setServerError(body.message);\n      }\n\n      history.push('/login');\n    } catch (err) {}\n  };\n\n  const onChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setForm({ ...form,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"registerForm\",\n      onChange: onChange,\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Username\",\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        nChange: onChange,\n        onSubmit: onSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}\n\n_s(RegisterPage, \"vAcA0yRfmgsr7P2Y9WAA/luP3eY=\", false, function () {\n  return [useHistory];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/Users/ofirshlomo/Desktop/לימודים/vacationProject/client/src/pages/RegisterPage.js"],"names":["useState","useHistory","field","Form","Input","Button","RegisterPage","form","setForm","serverError","setServerError","history","onSubmit","event","preventDefault","res","fetch","headers","method","body","JSON","stringify","json","ok","message","push","err","onChange","name","value","target","required"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,KAAK,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,UAA1B,EAAsC,UAAtC,CAAd;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMW,OAAO,GAAGV,UAAU,EAA1B;;AAEA,QAAMW,QAAQ,GAAG,MAAMC,KAAN,IAAe;AAC/B,QAAI;AACHA,MAAAA,KAAK,CAACC,cAAN,GADG,CAEH;;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,cAAD,EAAiB;AACvCC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAD8B;AAEvCC,QAAAA,MAAM,EAAE,MAF+B;AAGvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,IAAf;AAHiC,OAAjB,CAAvB;AAMA,YAAMY,IAAI,GAAG,MAAMJ,GAAG,CAACO,IAAJ,EAAnB;;AACA,UAAI,CAACP,GAAG,CAACQ,EAAT,EAAa;AACZ,eAAOb,cAAc,CAACS,IAAI,CAACK,OAAN,CAArB;AACA;;AACDb,MAAAA,OAAO,CAACc,IAAR,CAAa,QAAb;AAEA,KAfD,CAeE,OAAOC,GAAP,EAAY,CAAE;AAChB,GAjBD;;AAkBA,QAAMC,QAAQ,GAAGd,KAAK,IAAI;AACzB,UAAM;AAAEe,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBhB,KAAK,CAACiB,MAA9B;AACAtB,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACqB,IAAD,GAAQC;AAAnB,KAAD,CAAP;AACA,GAHD;;AAKA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACC;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,QAAQ,EAAEF,QAAzC;AAAmD,MAAA,QAAQ,EAAEf,QAA7D;AAAA,8BACA,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAE,CAAC;AAAEmB,UAAAA,QAAQ,EAAE,IAAZ;AAAkBP,UAAAA,OAAO,EAAE;AAA3B,SAAD,CAHT;AAAA,+BAKE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cADA,eASA,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAE,CAAC;AAAEO,UAAAA,QAAQ,EAAE,IAAZ;AAAkBP,UAAAA,OAAO,EAAE;AAA3B,SAAD,CAHT;AAAA,+BAKE,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cATA,eAiBE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAyC,QAAA,OAAO,EAAEG,QAAlD;AAA4D,QAAA,QAAQ,EAAEf,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA0BA;;GAvDQN,Y;UAIQL,U;;;KAJRK,Y;AAyDT,eAAeA,YAAf","sourcesContent":["import { useState } from 'react';\n\nimport { useHistory } from 'react-router-dom';\n\nconst field = ['firstName', 'lastName', 'userName', 'password'];\n\nimport { Form, Input, Button } from 'antd';\n\nfunction RegisterPage() {\n\tconst [form, setForm] = useState({});\n\tconst [serverError, setServerError] = useState('');\n\n\tconst history = useHistory();\n\n\tconst onSubmit = async event => {\n\t\ttry {\n\t\t\tevent.preventDefault();\n\t\t\t// todo: validate\n\t\t\tconst res = await fetch('/api/regiser', {\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(form),\n\t\t\t});\n\n\t\t\tconst body = await res.json();\n\t\t\tif (!res.ok) {\n\t\t\t\treturn setServerError(body.message);\n\t\t\t}\n\t\t\thistory.push('/login');\n         \n\t\t} catch (err) {}\n\t};\n\tconst onChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tsetForm({ ...form, [name]: value });\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<form className=\"registerForm\" onChange={onChange} onSubmit={onSubmit}>\n\t\t\t<Form.Item\n\t\t   label=\"Username\"\n\t\t   name=\"username\"\n\t\t   rules={[{ required: true, message: 'Please input your username!' }]}\n\t\t >\n\t\t   <Input />\n\t\t </Form.Item>\n   \n\t\t <Form.Item\n\t\t   label=\"Password\"\n\t\t   name=\"password\"\n\t\t   rules={[{ required: true, message: 'Please input your password!' }]}\n\t\t >\n\t\t   <Input.Password />\n\t\t </Form.Item>\n   \n\t\t   <Button type=\"primary\" htmlType=\"submit\" nChange={onChange} onSubmit={onSubmit}>\n\t\t\t Submit\n\t\t   </Button>\n\t\t\t</form>\n\t\t</div>\n\t\n\t);\n}\n\nexport default RegisterPage;\n\n\n"]},"metadata":{},"sourceType":"module"}