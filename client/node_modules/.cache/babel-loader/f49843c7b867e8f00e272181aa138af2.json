{"ast":null,"code":"var _jsxFileName = \"/Users/ofirshlomo/Desktop/\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD/vacationProject/client/src/pages/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Actions } from '../store';\nimport { Form, Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const [Form, setForm] = useState({}); // hook get store.dispatch method\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    const res = await fetch('/api/login', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(form)\n    });\n\n    if (!res.ok) {\n      //handle error\n      return;\n    }\n\n    const body = await res.json();\n    console.log(body);\n    dispatch(Actions.user.set(body));\n    history.push('/');\n  };\n\n  const onChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setForm({ ...Form,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onChange: onChange,\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"userName\",\n      rules: [{\n        required: true,\n        message: 'Please input your Username!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n          className: \"site-form-item-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }, this),\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n          className: \"site-form-item-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 14\n        }, this),\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n\n_s(LoginPage, \"qVr2oev5RiCF59+I7qNiBR6xSGU=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/ofirshlomo/Desktop/לימודים/vacationProject/client/src/pages/LoginPage.js"],"names":["useState","useDispatch","useHistory","Actions","Form","Input","Button","UserOutlined","LockOutlined","LoginPage","setForm","dispatch","history","onSubmit","event","preventDefault","res","fetch","headers","method","body","JSON","stringify","form","ok","json","console","log","user","set","push","onChange","name","value","target","required","message"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { Actions } from '../store';\n\n\nimport { Form, Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\n\n\n\nfunction LoginPage() {\n\tconst [Form, setForm] = useState({});\n\n\t// hook get store.dispatch method\n\tconst dispatch = useDispatch();\n\n\tconst history = useHistory();\n\n\tconst onSubmit = async event => {\n\t\tevent.preventDefault();\n\t\tconst res = await fetch('/api/login', {\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(form),\n\t\t});\n\t\tif (!res.ok) {\n\t\t\t//handle error\n\t\t\treturn;\n\t\t}\n\t\tconst body = await res.json();\n\t\tconsole.log(body);\n\t\tdispatch(Actions.user.set(body));\n\t\thistory.push('/');\n\t};\n\n\tconst onChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tsetForm({ ...Form, [name]: value });\n\t};\n\n\n\treturn (\n\t\t<Form onChange={onChange}\n\t\t\tonSubmit={onSubmit}\n\t\t>\n\t\t\t<Form.Item\n\t\t\t\tname=\"userName\"\n\t\t\t\trules={[{ required: true, message: 'Please input your Username!' }]}\n\t\t\t>\n\t\t\t\t<Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n\t\t\t</Form.Item>\n\n\n\t\t\t<Form.Item\n\t\t\t\tname=\"password\"\n\t\t\t\trules={[{ required: true, message: 'Please input your Password!' }]}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tprefix={<LockOutlined className=\"site-form-item-icon\" />}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n\t\t\t\tLog in\n        </Button>\n\n\t\t</Form>\n\t);\n}\n\nexport default LoginPage;\n\n\n\n"]},"metadata":{},"sourceType":"module"}