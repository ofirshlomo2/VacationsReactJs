{"ast":null,"code":"var _jsxFileName = \"/Users/ofirshlomo/Desktop/\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD/vacationProject/client/src/components/Vacation/VacationList.js\",\n    _s = $RefreshSig$();\n\nimport { Vacation } from './';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Actions, Selectors } from '../../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VacationList(props) {\n  _s();\n\n  const {\n    vacations,\n    user\n  } = props;\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === 1;\n  const dispatch = useDispatch();\n\n  const sortByFollow = (a, b) => {\n    if (a.isFollow) return -1;\n    return 1;\n  };\n\n  const deleteVacation = async vacationId => {\n    const res = await fetch(`/api/vacations/${vacationId}`, {\n      method: 'DELETE'\n    });\n    dispatch(Actions.vacations.delete(vacationId));\n  };\n\n  const toggleFollow = async vacationId => {\n    console.log('toggleFollow', vacationId);\n    const isFollow = !!vacations.find(v => v.id === vacationId).isFollow;\n\n    if (isFollow) {\n      const res = await fetch('/api/vacations/follow', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          vacationId: vacationId\n        })\n      });\n      const body = await res.json();\n    } else {\n      const res = await fetch('/api/vacations/follow', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          vacationId: vacationId\n        })\n      });\n      const body = await res.json();\n    }\n\n    dispatch(Actions.vacations.toggleFollow(vacationId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vacations\",\n    children: [...vacations].sort(sortByFollow).map(vacation => {\n      const isFollow = !!vacation.isFollow;\n      const actions = isAdmin ? [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => deleteVacation(vacation.id),\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 28\n      }, this)] : [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => toggleFollow(vacation.id),\n        children: isFollow ? 'UnFollow' : 'Follow'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)];\n      return /*#__PURE__*/_jsxDEV(Vacation, {\n        vacation: vacation,\n        actions: actions\n      }, vacation.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 12\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n}\n\n_s(VacationList, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = VacationList;\nexport default VacationList;\n\nvar _c;\n\n$RefreshReg$(_c, \"VacationList\");","map":{"version":3,"sources":["/Users/ofirshlomo/Desktop/לימודים/vacationProject/client/src/components/Vacation/VacationList.js"],"names":["Vacation","useDispatch","useSelector","useHistory","Actions","Selectors","VacationList","props","vacations","user","isAdmin","role","dispatch","sortByFollow","a","b","isFollow","deleteVacation","vacationId","res","fetch","method","delete","toggleFollow","console","log","find","v","id","headers","body","JSON","stringify","json","sort","map","vacation","actions"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,IAAzB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,aAAnC;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBF,KAA5B;AACA,QAAMG,OAAO,GAAG,CAAAD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEE,IAAN,MAAe,CAA/B;AAEE,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEF,QAAMY,YAAY,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC9B,QAAID,CAAC,CAACE,QAAN,EAAgB,OAAO,CAAC,CAAR;AAChB,WAAO,CAAP;AACA,GAHD;;AAKA,QAAMC,cAAc,GAAG,MAAMC,UAAN,IAAoB;AAC1C,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,kBAAiBF,UAAW,EAA9B,EAAiC;AACvDG,MAAAA,MAAM,EAAE;AAD+C,KAAjC,CAAvB;AAIAT,IAAAA,QAAQ,CAACR,OAAO,CAACI,SAAR,CAAkBc,MAAlB,CAAyBJ,UAAzB,CAAD,CAAR;AACA,GAND;;AAQA,QAAMK,YAAY,GAAG,MAAML,UAAN,IAAoB;AACxCM,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BP,UAA5B;AAEA,UAAMF,QAAQ,GAAG,CAAC,CAACR,SAAS,CAACkB,IAAV,CAAeC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASV,UAA7B,EAAyCF,QAA5D;;AACA,QAAIA,QAAJ,EAAc;AACb,YAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,uBAAD,EAA0B;AAChDC,QAAAA,MAAM,EAAE,QADwC;AAEhDQ,QAAAA,OAAO,EAAE;AACR,0BAAgB;AADR,SAFuC;AAKhDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBd,UAAAA,UAAU,EAAEA;AADQ,SAAf;AAL0C,OAA1B,CAAvB;AASA,YAAMY,IAAI,GAAG,MAAMX,GAAG,CAACc,IAAJ,EAAnB;AACA,KAXD,MAWO;AACN,YAAMd,GAAG,GAAG,MAAMC,KAAK,CAAC,uBAAD,EAA0B;AAChDC,QAAAA,MAAM,EAAE,MADwC;AAEhDQ,QAAAA,OAAO,EAAE;AACR,0BAAgB;AADR,SAFuC;AAKhDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBd,UAAAA,UAAU,EAAEA;AADQ,SAAf;AAL0C,OAA1B,CAAvB;AASA,YAAMY,IAAI,GAAG,MAAMX,GAAG,CAACc,IAAJ,EAAnB;AACA;;AACDrB,IAAAA,QAAQ,CAACR,OAAO,CAACI,SAAR,CAAkBe,YAAlB,CAA+BL,UAA/B,CAAD,CAAR;AACA,GA5BD;;AA8BA,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACE,CAAC,GAAGV,SAAJ,EAAe0B,IAAf,CAAoBrB,YAApB,EAAkCsB,GAAlC,CAAsCC,QAAQ,IAAI;AAClD,YAAMpB,QAAQ,GAAG,CAAC,CAACoB,QAAQ,CAACpB,QAA5B;AAEA,YAAMqB,OAAO,GAAG3B,OAAO,GACpB,cAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAD,eAAoB;AAAM,QAAA,OAAO,EAAE,MAAMO,cAAc,CAACmB,QAAQ,CAACR,EAAV,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB,CADoB,GAEpB,cAAC;AAAM,QAAA,OAAO,EAAE,MAAML,YAAY,CAACa,QAAQ,CAACR,EAAV,CAAjC;AAAA,kBAAiDZ,QAAQ,GAAG,UAAH,GAAgB;AAAzE;AAAA;AAAA;AAAA;AAAA,cAAD,CAFH;AAGA,0BAAO,QAAC,QAAD;AAA4B,QAAA,QAAQ,EAAEoB,QAAtC;AAAgD,QAAA,OAAO,EAAEC;AAAzD,SAAeD,QAAQ,CAACR,EAAxB;AAAA;AAAA;AAAA;AAAA,cAAP;AACA,KAPA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;;GA7DQtB,Y;UAIWL,W;;;KAJXK,Y;AA+DT,eAAeA,YAAf","sourcesContent":["import { Vacation } from './';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { Actions, Selectors } from '../../store';\n\nfunction VacationList(props) {\n\tconst { vacations, user } = props;\n\tconst isAdmin = user?.role === 1;\n\n   const dispatch = useDispatch();\n\n\tconst sortByFollow = (a, b) => {\n\t\tif (a.isFollow) return -1;\n\t\treturn 1;\n\t};\n\n\tconst deleteVacation = async vacationId => {\n\t\tconst res = await fetch(`/api/vacations/${vacationId}`, {\n\t\t\tmethod: 'DELETE',\n\t\t});\n\n\t\tdispatch(Actions.vacations.delete(vacationId));\n\t};\n\n\tconst toggleFollow = async vacationId => {\n\t\tconsole.log('toggleFollow', vacationId);\n\n\t\tconst isFollow = !!vacations.find(v => v.id === vacationId).isFollow;\n\t\tif (isFollow) {\n\t\t\tconst res = await fetch('/api/vacations/follow', {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tvacationId: vacationId,\n\t\t\t\t}),\n\t\t\t});\n\t\t\tconst body = await res.json();\n\t\t} else {\n\t\t\tconst res = await fetch('/api/vacations/follow', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tvacationId: vacationId,\n\t\t\t\t}),\n\t\t\t});\n\t\t\tconst body = await res.json();\n\t\t}\n\t\tdispatch(Actions.vacations.toggleFollow(vacationId));\n\t};\n\n\treturn (\n\t\t<div className=\"vacations\">\n\t\t\t{[...vacations].sort(sortByFollow).map(vacation => {\n\t\t\t\tconst isFollow = !!vacation.isFollow;\n\n\t\t\t\tconst actions = isAdmin\n\t\t\t\t\t? [<span>edit</span>, <span onClick={() => deleteVacation(vacation.id)}>delete</span>]\n\t\t\t\t\t: [<span onClick={() => toggleFollow(vacation.id)}>{isFollow ? 'UnFollow' : 'Follow'}</span>];\n\t\t\t\treturn <Vacation key={vacation.id} vacation={vacation} actions={actions} />;\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nexport default VacationList;\n"]},"metadata":{},"sourceType":"module"}