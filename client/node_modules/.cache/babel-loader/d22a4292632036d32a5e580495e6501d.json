{"ast":null,"code":"var _jsxFileName = \"/Users/ofirshlomo/Desktop/\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD/vacationProject/client/src/pages/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Actions } from '../store';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const [form, setForm] = useState({}); // hook get store.dispatch method\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    const res = await fetch('/api/login', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(form)\n    });\n\n    if (!res.ok) {\n      //handle error\n      return;\n    }\n\n    const body = await res.json();\n    console.log(body);\n    dispatch(Actions.user.set(body));\n    history.push('/');\n  };\n\n  const onChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setForm({ ...form,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: \"remember\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 16\n          }, this),\n          label: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 8,\n      children: /*#__PURE__*/_jsxDEV(Copyright, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n}\n\n_s(LoginPage, \"Fa5yLLcKBER4NOjDrsqD3oGdVs4=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = LoginPage;\n;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/ofirshlomo/Desktop/לימודים/vacationProject/client/src/pages/LoginPage.js"],"names":["useState","useDispatch","useHistory","Actions","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","makeStyles","Container","LoginPage","form","setForm","dispatch","history","onSubmit","event","preventDefault","res","fetch","headers","method","body","JSON","stringify","ok","json","console","log","user","set","push","onChange","name","value","target","classes","paper","avatar","submit"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Actions } from '../store';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nfunction LoginPage() {\n\tconst [form, setForm] = useState({});\n\n\t// hook get store.dispatch method\n\tconst dispatch = useDispatch();\n\n\tconst history = useHistory();\n\n\tconst onSubmit = async event => {\n\t\tevent.preventDefault();\n\t\tconst res = await fetch('/api/login', {\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(form),\n\t\t});\n\t\tif (!res.ok) {\n\t\t\t//handle error\n\t\t\treturn;\n\t\t}\n\t\tconst body = await res.json();\n\t\tconsole.log(body);\n\t\tdispatch(Actions.user.set(body));\n\t\thistory.push('/');\n\t};\n\n\tconst onChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tsetForm({ ...form, [name]: value });\n\t};\n\n\treturn (\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t<div className={classes.paper}>\n\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\tSign in\n\t\t  </Typography>\n\t\t\t\t<form className={classes.form} noValidate >\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tcontrol={<Checkbox value=\"remember\" color=\"primary\" />}\n\t\t\t\t\t\tlabel=\"Remember me\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t>\n\t\t\t\t\t\tSign In\n\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<Box mt={8}>\n\t\t\t\t<Copyright />\n\t\t\t</Box>\n\t\t</Container>\n\t);\n};\n\nexport default LoginPage;\n\n\n"]},"metadata":{},"sourceType":"module"}